name: Terraform Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.0.0"

    # Check that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check -recursive

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -no-color -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
        TF_VAR_twilio_account_sid: ${{ secrets.TWILIO_ACCOUNT_SID }}
        TF_VAR_twilio_auth_token: ${{ secrets.TWILIO_AUTH_TOKEN }}
        TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}

    # On push to main, apply the infrastructure changes
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
        TF_VAR_twilio_account_sid: ${{ secrets.TWILIO_ACCOUNT_SID }}
        TF_VAR_twilio_auth_token: ${{ secrets.TWILIO_AUTH_TOKEN }}
        TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
